package com.example;

import java.util.Scanner;

/**
 * 说句实话：这里很有 装饰模式 的味道， 当时硬是没有明白这种连环组合的好处，可能是为了避免总控制类过于庞大吧……
 */

public class Main {
    public static void main(String args[]) {
        Line line = new Line();
        line.givePersonScore();
    }
}

class InputScore {
    private DelScore del;

    InputScore(DelScore del) {
        this.del = del;
    }

    void inputScore() {
        System.out.println("请输入评委数");
        Scanner read = new Scanner(System.in);
        int count = read.nextInt();
        System.out.println("请输入各个评委的分数");
        double[] a = new double[count];
        for (int i = 0; i < count; i++) {
            a[i] = read.nextDouble();
        }
        del.doDelete(a);
    }
}

class DelScore {
    private ComputerAver computer;

    DelScore(ComputerAver computer) {
        this.computer = computer;
    }

    void doDelete(double[] a) {
        java.util.Arrays.sort(a);  //数组 a 从小到大排序
        System.out.print("去掉一个最高分:" + a[a.length - 1] + "，");
        System.out.print("去掉一个最低分:" + a[0] + "。");
        double b[] = new double[a.length - 2];
        System.arraycopy(a, 1, b, 0, a.length - 1 - 1);
        computer.giveAver(b);
    }
}

class ComputerAver {
    private JiGe mJiGe;

    public ComputerAver(JiGe jiGe) {
        mJiGe = jiGe;
    }

    void giveAver(double[] b) {
        double sum = 0;
        for (double aB : b) {
            sum = sum + aB;
        }
        double aver = sum / b.length;
        System.out.println("选手最后得分" + aver);
        mJiGe.showJiGe(aver);
    }
}

class JiGe {
    public void showJiGe(double num){
        if(num>=9.0)    System.out.println("选手及格！!");
        else            System.out.println("选手不及格");
    }
}

class Line {
    private InputScore one;
    private DelScore two;
    private ComputerAver three;
    private JiGe four;

    Line() {
        four = new JiGe();
        three = new ComputerAver(four);
        two = new DelScore(three);
        one = new InputScore(two);
    }

    void givePersonScore() {
        one.inputScore();
    }
}