
/**
 * 耦合有一点大，逻辑比较复杂的一题
 */
public class Main {
    public static void main(String args[]) {
        Number number = new Number();
        number.giveNumberThread.start();
        number.guessNumberThread.start();
        number.guessNumberThread2.start();
    }
}


class Number implements Runnable {
    private final int SMALLER = -1, LARGER = 1, SUCCESS = 8;
    private int realNumber, guessNumber, min = 0, max = 100, message = SMALLER;
    private boolean pleaseGuess = false, isGiveNumber = false;
    Thread giveNumberThread, guessNumberThread, guessNumberThread2;

    Number() {
        giveNumberThread = new Thread(this);
        guessNumberThread = new Thread(this);
        guessNumberThread2 = new Thread(this);
    }

    public void run() {
        for (int count = 1; true; count++) {
            setMessage(count);
            if (message == SUCCESS) return;
        }
    }

    public synchronized void setMessage(int count) {
        if (Thread.currentThread() == giveNumberThread && !isGiveNumber) {
            realNumber = (int) (Math.random() * 100) + 1;
            System.out.println("随机给你一个 1 至 100 之间的数，猜猜是多少？");
            isGiveNumber = true;
            pleaseGuess = true;
        }
        if (Thread.currentThread() == giveNumberThread) {
            while (pleaseGuess) try { wait();  } catch (InterruptedException e) { }//让出 CPU 使用权，让另一个线程开始猜数
            if (realNumber > guessNumber) { //结束等待后，根据另一个线程的猜测给出提示
                message = SMALLER;
                System.out.println("你猜小了");
            } else if (realNumber < guessNumber) {
                message = LARGER;
                System.out.println("你猜大了");
            } else {
                message = SUCCESS;
                System.out.println("恭喜，你猜对了");
            }
            pleaseGuess = true;
        }
        if (Thread.currentThread() == guessNumberThread && isGiveNumber) {
            while (!pleaseGuess) try { wait();  } catch (InterruptedException e) { }//让出 CPU 使用权，让另一个线程给出提示
            if (message == SMALLER) {
                min = guessNumber;
                guessNumber = (min + max) / 2;
                System.out.println("我1第" + count + "次猜这个数是:" + guessNumber);
            } else if (message == LARGER) {
                max = guessNumber;
                guessNumber = (min + max) / 2;
                System.out.println("我1第" + count + "次猜这个数是:" + guessNumber);
            }
            pleaseGuess = false;
        }
        if (Thread.currentThread() == guessNumberThread2 && isGiveNumber) {
            while (!pleaseGuess) try { wait();  } catch (InterruptedException e) { }//让出 CPU 使用权，让另一个线程给出提示
            if (message == SMALLER) {
                min = guessNumber;
                guessNumber = (min + max) / 2;
                System.out.println("我2第" + count + "次猜这个数是:" + guessNumber);
            } else if (message == LARGER) {
                max = guessNumber;
                guessNumber = (min + max) / 2;
                System.out.println("我2第" + count + "次猜这个数是:" + guessNumber);
            }
            pleaseGuess = false;
        }
        notifyAll();
    }
}